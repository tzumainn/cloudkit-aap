- name: Show node requests
  ansible.builtin.debug:
    var: cluster_infra_node_requests

- name: Create cluster network
  ansible.builtin.include_role:
    name: massopencloud.esi.network
  vars:
    network_suffix: "{{ cluster_infra_name }}"
    network_state: present

- name: Set cluster_infra_network_name
  ansible.builtin.set_fact:
    cluster_infra_network_name: "network-{{ cluster_infra_name }}"

# Handle scale down **before** scale up: if we add new agents first,
# they may not have spec.clusterDeployment.name set by the time
# we run detach_and_unlabel_all_removed_agents, causing them to be
# erroneously detached.

- name: Retrieve all currently allocated node pools
  kubernetes.core.k8s_info:
    api_version: hypershift.openshift.io/v1beta1
    kind: NodePool
    namespace: "{{ cluster_working_namespace }}"
  register: current_node_pools

- name: Set resource classes included in the request
  ansible.builtin.set_fact:
    requested_resource_classes: >
      {{ cluster_infra_node_requests | map(attribute='resourceClass') }}

- name: Determine which resource classes are no longer needed
  ansible.builtin.set_fact:
    removed_resource_classes: "{{ removed_resource_classes | default([]) + [item.metadata.labels[esi_agent_resource_class_label]] }}"
  with_items: "{{ current_node_pools.resources }}"
  when: item.metadata.labels[esi_agent_resource_class_label] not in requested_resource_classes

- name: Initialize updated cluster infra node requests that will include removed resource classes
  ansible.builtin.set_fact:
    updated_cluster_infra_node_requests: "{{ cluster_infra_node_requests }}"
 
- name: Add removed resource classes to updated cluster infra node requests
  ansible.builtin.set_fact:
    updated_cluster_infra_node_requests: "{{ updated_cluster_infra_node_requests + [{'numberOfNodes': '0', 'resourceClass': item}] }}"
  with_items: "{{ removed_resource_classes | default([]) }}"

- name: Wait for the Agents to be removed from the cluster
  ansible.builtin.include_role:
    name: manage_agents
    tasks_from: wait_for_agents_to_be_removed
  vars:
    manage_agents_cluster_order_name: "{{ cluster_infra_name }}"
    manage_agents_desired_count: "{{ item.numberOfNodes | int }}"
    manage_agents_resource_class: "{{ item.resourceClass }}"
  loop: "{{ updated_cluster_infra_node_requests }}"

- name: Detach agents from cluster
  ansible.builtin.include_role:
    name: manage_agents
    tasks_from: detach_and_unlabel_all_removed_agents
  vars:
    manage_agents_cluster_order_name: "{{ cluster_infra_name }}"

- name: Select and label new Agent resources
  ansible.builtin.include_role:
    name: manage_agents
    tasks_from: select_and_label_new_agents
  vars:
    manage_agents_cluster_order_name: "{{ cluster_infra_name }}"
    manage_agents_desired_count: "{{ item.numberOfNodes | int }}"
    manage_agents_resource_class: "{{ item.resourceClass }}"
  loop: "{{ cluster_infra_node_requests }}"

- name: Attach agents to cluster network and approve them
  ansible.builtin.include_role:
    name: manage_agents
    tasks_from: attach_and_approve_all_new_agents
  vars:
    manage_agents_cluster_order_name: "{{ cluster_infra_name }}"
    manage_agents_cluster_network: "{{ cluster_infra_network_name }}"

- name: Approve agents assigned to the cluster
  ansible.builtin.include_role:
    name: manage_agents
    tasks_from: attach_and_approve_all_new_agents
  vars:
    manage_agents_cluster_order_name: "{{ cluster_infra_name }}"
    manage_agents_cluster_network: "{{ cluster_infra_network_name | default(omit) }}"
